<template>
  <div class="app-container">
    <div class="mb20 flex justify-end">
      <el-button class="mr10" type="warning" @click="exportClientPayee"
        >导出</el-button
      >
      <el-input
        class="mr5"
        v-model="queryParams.nickName"
        placeholder="请输入收款人姓名"
        clearable
        @keyup.enter.native="handleQuery"
      />
      <el-input
        class="mr5"
        v-model="queryParams.carNum"
        placeholder="请输入银行卡卡号"
        clearable
        @keyup.enter.native="handleQuery"
      />
      <el-button type="primary" @click="handleQuery">查询</el-button>
      <el-button type="danger" @click="resetQuery">清空</el-button>
    </div>
    <div class="mb20">
      <el-button type="primary" @click="handleAdd">新增</el-button>
    </div>
    <el-table :data="tableData">
      <el-table-column
        prop="bankNo"
        label="序号"
        type="index"
      ></el-table-column>
      <el-table-column prop="kaihuName" label="收款人姓名"></el-table-column>
      <el-table-column prop="userId" label="所属用户"></el-table-column>
      <el-table-column prop="accountBank" label="身份证号"></el-table-column>
      <el-table-column prop="payeePhone" label="收款人电话"></el-table-column>
      <el-table-column prop="accountBank" label="银行卡号"></el-table-column>
      <el-table-column prop="kaihuBank" label="开户银行"></el-table-column>
      <el-table-column prop="createBy" label="创建人"></el-table-column>
      <el-table-column prop="createTime" label="创建时间"></el-table-column>
      <el-table-column prop="updateTime" label="更新时间"></el-table-column>
      <el-table-column label="备注" align="center" prop="remark" />
      <el-table-column
        label="操作"
        align="center"
        class-name="small-padding fixed-width"
      >
        <template slot-scope="data">
          <!-- <span
            class="operate mr10"
            style="color: #409eff"
            @click="handleUpdate(data.row)"
            >修改</span
          > -->
          <span
            class="operate mr10"
            style="color: #f56c6c"
            @click="handleDelete(data.row)"
            >删除</span
          >
        </template>
      </el-table-column>
    </el-table>

    <!-- 分页器 -->
    <div class="paging_css">
      <Pagination
        :total="total"
        :page="queryParams.pageSize"
        :limit="queryParams.pageNum"
        @pagination="pagination"
      ></Pagination>
    </div>

    <!-- 添加或修改用户信息对话框 -->
    <el-dialog
      :title="state == 1 ? '添加收款人' : '修改收款人'"
      :visible.sync="dialogVisible"
      width="800px"
      append-to-body
    >
      <el-form ref="form" :model="form" :rules="rules" label-width="120px">
        <el-form-item label="开户人姓名" prop="kaihuName">
          <el-input v-model="form.kaihuName"></el-input>
        </el-form-item>
        <el-form-item label="银行卡号" prop="accountBank">
          <el-input v-model="form.accountBank"></el-input>
        </el-form-item>
        <el-form-item label="身份证号" prop="idCardNumber">
          <el-input v-model="form.idCardNumber"></el-input>
        </el-form-item>
        <el-form-item label="开户银行" prop="kaihuBank">
          <el-input v-model="form.kaihuBank"></el-input>
        </el-form-item>
        <el-form-item label="收款人电话" prop="payeePhone">
          <el-input v-model="form.payeePhone"></el-input>
        </el-form-item>
        <el-form-item label="关联人身份" prop="identity">
          <el-select
            size="small mr10"
            v-model="form.identity"
            placeholder="关联人身份"
          >
            <el-option :value="1" label="企业"></el-option>
            <el-option :value="0" label="个人"></el-option>
          </el-select>
        </el-form-item>
        <el-form-item label="关联人" prop="shipperFullName">
          <el-autocomplete
            v-model="form.shipperFullName"
            :fetch-suggestions="querySearchAsync"
            placeholder="手机号搜索"
            @select="handleSelect"
          ></el-autocomplete>
        </el-form-item>
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button type="primary" @click="submitForm">确 定</el-button>
        <el-button @click="dialogVisible = false">取 消</el-button>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import {
  getList,
  removePayee,
  addPayee,
  queryAffiliatedPerson,
  exportClientPayee
} from "@/api/member/payee";
import Pagination from "@/components/Pagination";

export default {
  components: {
    Pagination,
  },
  data () {
    return {
      state: 1,
      // 总条数
      total: 0,
      // 用户信息表格数据
      tableData: [],
      // 是否显示弹出层
      dialogVisible: false,
      // 查询参数
      queryParams: {
        pageNum: 1,
        pageSize: 10,
        nickName: null,
        carNum: null,
      },
      // 表单参数
      form: {
        identity: 1,
        shipperFullName: "",
        userId: "",
        kaihuName: "", //收款人姓名
        idCardNumber: "", //身份证号
        payeePhone: "", //收款人电话
        accountBank: "", //银行卡号
        kaihuBank: "", //开户银行
      },

      // 表单校验
      rules: {
        shipperFullName: [
          { required: true, message: "关联人不能为空", trigger: "blur" },
        ],
      },
    };
  },
  mounted () {
    this.getList();
  },
  methods: {
    //列表
    getList () {
      getList(this.queryParams).then((res) => {
        if (res.code == 200) {
          this.tableData = res.rows
          this.total = res.total
        }
      });
    },
    //查询
    handleQuery () {
      this.queryParams.pageNum = 1;
      this.getList();
    },
    //清空
    resetQuery () {
      this.queryParams = {
        pageNum: 1,
        pageSize: 10,
        nickName: null,
        carNum: null,
      }
      this.getList();
    },
    //关联人数据
    handleSelect (item) {
      this.form.userId = item.shipperCode;
    },
    //关联人数据
    querySearchAsync (queryString, cb) {
      queryAffiliatedPerson({ shipperFullName: queryString, identity: this.form.identity }).then((res) => {
        if (res.code == 200) {
          var results = [];
          for (var i of res.data) {
            results.push({
              value: i.shipperFullName,
              shipperCode: i.shipperCode
            })
          }
          cb(results);
        }
      });
    },
    //查询关联人
    queryAffiliatedPerson () {
      queryAffiliatedPerson({ shipperFullName: this.form.shipperFullName }).then((res) => {
        if (res.code == 200) {
          console.log(res)
        }
      });
    },
    //新增弹框
    handleAdd () {
      this.dialogVisible = true;
      this.state = 1
    },
    //修改弹框
    handleUpdate (row) {
      this.form = row
      this.dialogVisible = true;
      this.state = 2
    },
    //提交按钮
    submitForm (key) {
      this.$refs.form.validate((valid) => {
        if (valid) {
          if (this.state == 1) {
            addPayee(this.form).then((res) => {
              if (res.code == 200) {
                this.$message({
                  message: '新增成功',
                  type: 'success',
                  duration: 3000
                });
                this.$refs.form.resetFields();
                this.dialogVisible = false;
                this.getList();
              }
            });
          } else {
            //没有修改保存接口
            XXX(this.form).then((res) => {
              if (res.code == 200) {
                this.$message({
                  message: '修改成功',
                  type: 'success',
                  duration: 3000
                });
                this.$refs.form.resetFields();
                this.dialogVisible = false;
                this.getList();
              }
            });
          }
        }
      });
    },
    //删除
    handleDelete (data) {
      this.$confirm('删除收款人ID为' + data.payeeId + "的数据", '提示', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'warning'
      }).then(() => {
        removePayee({ payeeId: data.payeeId }).then((res) => {
          if (res.code == 200) {
            this.getList();
            this.$message({
              message: '删除成功',
              type: 'success',
              duration: 3000
            });
          }
        })
      })
    },
    //导出
    exportClientPayee () {
      exportClientPayee({}).then(res => {
        //通用下载方法
        this.downloadData(res)
      })
    },
    //分页
    pagination (val) {
      this.queryParams.pageSize = val.page;
      this.queryParams.pageNum = val.limit;
      this.getList();
    },
  },
};
</script>
